"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import drink_input as components_drink_input
from ...models.components import error as components_error
from ...models.components import ingredient_input as components_ingredient_input
from dataclasses_json import Undefined, dataclass_json
from test_bar import utils
from typing import Optional


@dataclasses.dataclass
class StockUpdateResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    error: Optional[components_error.Error] = dataclasses.field(default=None)
    r"""An unknown error occurred interacting with the API."""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StockUpdateRequestBody:
    drink: Optional[components_drink_input.DrinkInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drink'), 'exclude': lambda f: f is None }})
    ingredient: Optional[components_ingredient_input.IngredientInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ingredient'), 'exclude': lambda f: f is None }})
    

